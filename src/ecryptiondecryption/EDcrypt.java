/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ecryptiondecryption;

import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.datatransfer.StringSelection;
import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;
import java.util.Base64;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;

/**
 *
 * @author MH Habib
 */
public class EDcrypt extends javax.swing.JFrame {

    /**
     * Creates new form EDcrypt
     */
    private static SecretKeySpec secretKey;
    private static byte[] key;
    public static void setKey(String myKey)
    {
        MessageDigest sha = null;
        try {
            key = myKey.getBytes("UTF-8");
            sha = MessageDigest.getInstance("SHA-1");
            key = sha.digest(key);
            key = Arrays.copyOf(key, 16);
            secretKey = new SecretKeySpec(key, "AES");
        }
        catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        }
        catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }
    }
    public EDcrypt() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        text1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        text2 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        text3 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        text4 = new javax.swing.JTextArea();
        msg1 = new javax.swing.JTextField();
        msg2 = new javax.swing.JTextField();
        encrypt = new javax.swing.JButton();
        decrypt = new javax.swing.JButton();
        copyencrypt = new javax.swing.JButton();
        copydecrypt = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        message1 = new javax.swing.JLabel();
        message2 = new javax.swing.JLabel();
        mainsection = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Encryption and Decryption ");
        setAlwaysOnTop(true);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(null);

        text1.setBackground(new java.awt.Color(204, 255, 255));
        text1.setColumns(20);
        text1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        text1.setRows(5);
        text1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2));
        jScrollPane1.setViewportView(text1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(80, 80, 300, 120);

        text2.setBackground(new java.awt.Color(204, 255, 255));
        text2.setColumns(20);
        text2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        text2.setRows(5);
        text2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2));
        jScrollPane2.setViewportView(text2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(80, 260, 300, 140);

        text3.setBackground(new java.awt.Color(204, 255, 255));
        text3.setColumns(20);
        text3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        text3.setRows(5);
        text3.setToolTipText("");
        text3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2));
        jScrollPane3.setViewportView(text3);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(470, 80, 320, 120);

        text4.setBackground(new java.awt.Color(204, 255, 255));
        text4.setColumns(20);
        text4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        text4.setRows(5);
        text4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 2));
        jScrollPane4.setViewportView(text4);

        getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(470, 260, 320, 140);

        msg1.setBackground(new java.awt.Color(204, 204, 204));
        msg1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        msg1.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(msg1);
        msg1.setBounds(200, 220, 180, 30);

        msg2.setBackground(new java.awt.Color(204, 204, 204));
        msg2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        msg2.setBorder(new javax.swing.border.MatteBorder(null));
        getContentPane().add(msg2);
        msg2.setBounds(595, 220, 190, 30);

        encrypt.setBackground(new java.awt.Color(0, 0, 0));
        encrypt.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        encrypt.setForeground(new java.awt.Color(255, 255, 255));
        encrypt.setText("Encrypt");
        encrypt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        encrypt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        encrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptActionPerformed(evt);
            }
        });
        getContentPane().add(encrypt);
        encrypt.setBounds(80, 420, 90, 30);

        decrypt.setBackground(new java.awt.Color(0, 0, 0));
        decrypt.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        decrypt.setForeground(new java.awt.Color(255, 255, 255));
        decrypt.setText("Decrypt");
        decrypt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        decrypt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        decrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptActionPerformed(evt);
            }
        });
        getContentPane().add(decrypt);
        decrypt.setBounds(470, 420, 90, 30);

        copyencrypt.setBackground(new java.awt.Color(102, 0, 0));
        copyencrypt.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        copyencrypt.setForeground(new java.awt.Color(255, 255, 255));
        copyencrypt.setText("Copy Encryption");
        copyencrypt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        copyencrypt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        copyencrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyencryptActionPerformed(evt);
            }
        });
        getContentPane().add(copyencrypt);
        copyencrypt.setBounds(240, 420, 140, 30);

        copydecrypt.setBackground(new java.awt.Color(102, 0, 0));
        copydecrypt.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        copydecrypt.setForeground(new java.awt.Color(255, 255, 255));
        copydecrypt.setText("Copy Decryption");
        copydecrypt.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        copydecrypt.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        copydecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copydecryptActionPerformed(evt);
            }
        });
        getContentPane().add(copydecrypt);
        copydecrypt.setBounds(640, 420, 150, 30);

        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });
        getContentPane().add(jLabel2);
        jLabel2.setBounds(810, 5, 30, 20);

        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel3MousePressed(evt);
            }
        });
        getContentPane().add(jLabel3);
        jLabel3.setBounds(780, 5, 30, 20);

        jLabel1.setFont(new java.awt.Font("Ebrima", 1, 15)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 51, 0));
        jLabel1.setText("Encryption Key :");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(80, 220, 120, 30);

        jLabel4.setFont(new java.awt.Font("Ebrima", 1, 15)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 51, 0));
        jLabel4.setText("Decryption Key :");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(470, 220, 120, 30);

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Decryption");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(470, 50, 300, 30);

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 51));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Encryption");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(80, 50, 300, 30);

        message1.setForeground(new java.awt.Color(204, 0, 0));
        message1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(message1);
        message1.setBounds(80, 450, 300, 20);

        message2.setForeground(new java.awt.Color(204, 0, 0));
        message2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(message2);
        message2.setBounds(470, 450, 320, 20);

        mainsection.setBackground(new java.awt.Color(204, 204, 204));
        mainsection.setForeground(new java.awt.Color(204, 0, 0));
        mainsection.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edcrypt.png"))); // NOI18N
        mainsection.setAutoscrolls(true);
        mainsection.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(mainsection);
        mainsection.setBounds(0, 0, 850, 500);

        setSize(new java.awt.Dimension(850, 499));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        // TODO add your handling code here:
        System.exit(0);
        
    }//GEN-LAST:event_jLabel2MousePressed

    private void jLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MousePressed
        // TODO add your handling code here:
        this.setState(Frame.ICONIFIED); 
    }//GEN-LAST:event_jLabel3MousePressed

    private void encryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptActionPerformed
        // TODO add your handling code here:
        String strToEncrypt;
        String secret;
        try
        {
            strToEncrypt=text1.getText();
            secret=msg1.getText();
            setKey(secret);
            Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5Padding");
            cipher.init(Cipher.ENCRYPT_MODE, secretKey);
            text2.setText(Base64.getEncoder().encodeToString(cipher.doFinal(strToEncrypt.getBytes("UTF-8"))));
            
        }
        catch (Exception e)
        {
            text2.setText("Please fill up the right secret key");
            
        }        
    }//GEN-LAST:event_encryptActionPerformed

    private void copyencryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyencryptActionPerformed
        // TODO add your handling code here:
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(text2.getText()),null);
        message1.setText("Your encryption result is copied!");
        message2.setText("");
    }//GEN-LAST:event_copyencryptActionPerformed

    private void decryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptActionPerformed
        // TODO add your handling code here:
        String secret;
        String strToDecrypt;
        try
        {
            secret=msg2.getText();
            strToDecrypt=text3.getText();
            setKey(secret);
            Cipher cipher = Cipher.getInstance("AES/ECB/PKCS5PADDING");
            cipher.init(Cipher.DECRYPT_MODE, secretKey);
            text4.setText(new String(cipher.doFinal(Base64.getDecoder().decode(strToDecrypt))));
            //return new String(cipher.doFinal(Base64.getDecoder().decode(strToDecrypt)));
        }
        catch (Exception e)
        {
            text4.setText("Please fill up the right secret key");
        }
    }//GEN-LAST:event_decryptActionPerformed

    private void copydecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copydecryptActionPerformed
        // TODO add your handling code here:
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(text4.getText()),null);
        message2.setText("Your decryption result is copied!");
        message1.setText("");
    }//GEN-LAST:event_copydecryptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EDcrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EDcrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EDcrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EDcrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EDcrypt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton copydecrypt;
    private javax.swing.JButton copyencrypt;
    private javax.swing.JButton decrypt;
    private javax.swing.JButton encrypt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel mainsection;
    private javax.swing.JLabel message1;
    private javax.swing.JLabel message2;
    private javax.swing.JTextField msg1;
    private javax.swing.JTextField msg2;
    private javax.swing.JTextArea text1;
    private javax.swing.JTextArea text2;
    private javax.swing.JTextArea text3;
    private javax.swing.JTextArea text4;
    // End of variables declaration//GEN-END:variables
}
